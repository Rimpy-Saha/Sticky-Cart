<script type="text/javascript" id="Search-script"> 
var radio = document.getElementById("type1");
var $radio = $(radio);
var domain_name = window.location.hostname;
// Get the URL parameters
const urlParams = new URLSearchParams(window.location.search);

// Get the value of a specific parameter
const get_search = urlParams.get('search');
const get_use_type = urlParams.get('use_type');
//const min = urlParams.get('minimum');
//const max = urlParams.get('maximum');
//const size_unit_val = urlParams.get('size_unit');
const get_flag = (get_search!='')? true:false;
//console.log('search value:', get_search);

if(get_flag)
{
    document.getElementById('mob_search').value = get_search;
    document.getElementById('search').value = get_search;
}


	// console.log($radio);
// var tag = document.getElementsByClassName("tags")[0].getElementsByTagName("span");
// console.log(tag);
// for(var i = 0; i <tag.length; i++){
// 	console.log(tag[i]);
// 	var x = tag[i].getElementsByTagName("p");
// 	console.log(x);
// 		if(x[0].innerHTML == ""){
// 			tag[i].style.display = "none";
// 		}


// }
// var times = 0;
// var prevActiveElement;

// $( window ).on( "blur", function(e){
//         prevActiveElement = document.activeElement;
// });

// $('#dvii').on('focus', function() {
//     if (document.activeElement === prevActiveElement) {
//         return;
//     }
//     prevActiveElement = document.activeElement;
//     times++;
//     conosle.log("aisufhsirujr npiuofsgpndeugp npfigounaeprf");
// }).on( "blur", function(){
//     prevActiveElement = null;  
// });

function button_sub() {
    $('#form_desk').submit();
}

function close_advanced() {
    // 
    // console.log(document.getElementsByClassName("mob_search")[0]);
    // document.getElementsByClassName("mob_active")[0].style.animation = "slidedown 2s";
    // document.getElementsByClassName("mob_active")[0].style.top = "100%";
    document.getElementsByClassName("mob_search")[0].classList.add("mob_inactive");
    setTimeout(function() {
        document.getElementsByClassName("mob_search")[0].classList.remove("mob_active");
        document.getElementsByClassName("mob_search")[0].classList.remove("mob_inactive");
    }, 2000);
    // document.getElementsByClassName("mob_search")[0].classList.remove("mob_active");
}

function select_use(elem) {
    var x = document.getElementById("second-p-use");
    var y = document.getElementById("type2");

    // var tag_div = document.getElementsByClassName("tags")[0];
    // var use_tag ='<span><p id="use_type_tag">Research</p></span>';
    // tag_div.insertAdjacentHTML('beforeend',use_tag);

    if (elem.id == "type1" || elem.id == "mob_type1") {
    	
        x.innerHTML = "Research";
        var e1 = document.getElementById("type1");
        var e2 = document.getElementById("mob_type1");
        rad(e1);
        rad(e2);

        // var i = document.getElementById("use_type_tag");
        // i.innerHTML = "Research";
        // //console.log("fs", i.parentElement);
        // i.parentElement.style.display = "block";

    } else {
    	
        x.innerHTML = "Diagnostic";
        var e1 = document.getElementById("type2");
        var e2 = document.getElementById("mob_type2");
        rad(e1);
        rad(e2);
        // var i = document.getElementById("use_type_tag");
        // i.innerHTML = "Diagnostic";
        // i.parentElement.style.display = "block";
        // tag_div.insertAdjacentHTML('beforeend',use_tag);
    }
}


function rad(radio) {

    var $radio = $(radio);
 	var x = document.getElementById("second-p-use");
    // if this was previously checked
    //console.log(radio);
 
    if ($radio.data('waschecked') == true) {
        $radio.prop('checked', false);
        $radio.data('waschecked', false);
        x.innerHTML = "choose";
    } else {
        $radio.prop('checked', true);
        $radio.data('waschecked', true);
    }

    // // remove was checked from other radios
    $radio.siblings('input[type="radio"]').data('waschecked', false);
   
}

function open_filters() {
    var x = document.getElementsByClassName("mob_search")[0];
    var filter_icon = document.querySelector('#mob-filters-icon');
    if (x.classList.contains("mob_active")) {
        x.classList.remove("mob_active");
    } else {
        x.classList.add("mob_active");
    }
    filter_icon.classList.toggle('fa-filter');
    filter_icon.classList.toggle('fa-times');
}
//new search function
function close_nav() {
    var y = document.getElementsByClassName("new_div");
    var overlay = document.getElementById("overlay");
    var searchbar = document.getElementsByClassName("new_search")[0];
    if(document.getElementById("search_dropdown")){
        document.getElementById("search_dropdown").style.display = "none";
    }
    if(document.getElementById("mob_search_dropdown")){
        document.getElementById("mob_search_dropdown").style.display = "none";
    }
    overlay.style.display = "none";
    for (var i = 0; i < y.length; i++) {
        if (y[i].classList.contains("active-div")) {
            y[i].classList.remove("active-div");
            searchbar.style.background = "white";
        }
    }

    var border = document.getElementsByClassName("border");

    for (var i = 0; i < border.length; i++) {
        if (border[i].classList.contains("active-border")) {
            border[i].classList.remove("active-border");
        }
    }
    var z = document.getElementsByClassName("filter");

    for (var i = 0; i < z.length; i++) {
        if (z[i].classList.contains("active-block")) {
            z[i].classList.remove("active-block");
        }
    }


}

function open_nav(number) {
	// console.log(number);
    var x = document.getElementsByClassName("new_div")[number];
    var y = document.getElementsByClassName("new_div");
    var z = document.getElementsByClassName("filter");

    var searchbar = document.getElementsByClassName("new_search")[0];
    var results = document.getElementsByClassName("left_results")[0];

    var overlay = document.getElementById("overlay");
    var filter = document.getElementsByClassName("filter")[number];

    var border = document.getElementsByClassName("border");

    for (var i = 0; i < y.length; i++) {
        if (y[i].classList.contains("active-div") && i != number) {
            y[i].classList.remove("active-div");
            searchbar.style.background = "white";
        }
    }
    for (var i = 0; i < z.length; i++) {
        if (z[i].classList.contains("active-block") && i != number) {
            z[i].classList.remove("active-block");
        }
    }

    for (var i = 0; i < border.length; i++) {
        if (border[i].classList.contains("active-border") && i != number) {
            border[i].classList.remove("active-border");
        }
    }
    if (x.classList.contains("active-div") && number != 2) {
        x.classList.remove("active-div");
        // results.style.background="white";
        overlay.style.display = "none";
        filter.classList.remove("active-block");
    } else if (x.classList.contains("active-div") && number == 2) {
        x.classList.remove("active-div");
        // results.style.background="white";
        overlay.style.display = "none";
        filter.classList.remove("active-block");
        // border[number+1].classList.remove("active-border");
    }else if ((x.classList.contains("active-div") == false) && number == 0) {
        x.classList.add("active-div");
        // results.style.background="#80808040";
        overlay.style.display = "block";
        filter.classList.add("active-block");
        border[number].classList.add("active-border");
        // border[number + 1].classList.add("active-border");

    } else if ((x.classList.contains("active-div") == false) && number == 2) {
    	// console.log("tes");
    	// console.log(border[number-1]);
        x.classList.add("active-div");
        // results.style.background="#80808040";
        overlay.style.display = "block";
        filter.classList.add("active-block");
        border[number-1].classList.add("active-border");
        // border[number+1].classList.add("active-border");
    } 
    else if ((x.classList.contains("active-div") == false) && number != 2) {
        x.classList.add("active-div");
        // results.style.background="#80808040";
        overlay.style.display = "block";
        filter.classList.add("active-block");
        border[number].classList.add("active-border");
        border[number - 1].classList.add("active-border");
    }

}

function hover_nav(number) {
	// console.log("hovering" , number);
    var x = document.getElementsByClassName("new_div")[number];
    var border = document.getElementsByClassName("border");
    var y = document.getElementsByClassName("new_div");
    // console.log("hover_nav is here");
    if(number == 2){
    	border[number-1].classList.add("active-border");
    }
    else if (number == 0) {
        border[number].classList.add("active-border");
        // border[number + 1].classList.add("active-border");

    } else if(number!=2){
        border[number].classList.add("active-border");
        border[number-1].classList.add("active-border");
    }

}

function leave_nav(number) {
	// console.log("hover-eft", number);
    var x = document.getElementsByClassName("new_div")[number];
    var y = document.getElementsByClassName("new_div")[number - 1];
    var z = document.getElementsByClassName("new_div");
    //  console.log("leave_nav is here "+ number);
    var border = document.getElementsByClassName("border");
    //  console.log
    if (number == 2) {
    	// console.log("why no there");
        // border[number].classList.remove("active-border");
        border[number - 1].classList.remove("active-border");
    }
    if (number == 0) {
        border[number].classList.remove("active-border");
        // border[number + 1].classList.add("active-border");

    } else if(number!=2) {
    	// console.log("why here");
        border[number].classList.remove("active-border");
        border[number-1].classList.remove("active-border");

    }

    for (var i = 0; i < z.length; i++) {
    	// console.log(z.length);
        if (z[i].classList.contains("active-div")) {
        	// console.log(i);
        	if(i==2){
        		// console.log("why is going through this");
        		// console.log(i);
                border[i-1].classList.add("active-border");
        	}
        	else if (i == 0) {
        		// console.log(i);
                border[i].classList.add("active-border");
        	}
        	else{
        		// console.log("and not this");
        		// console.log(i);
        		// border[i-1].classList.add("active-border");
        		border[i].classList.add("active-border");
                border[i - 1].classList.add("active-border");
        	}
         
        } 
    }

}
//end of new search function


$(document).ready(function() {

    var input = document.getElementById("search");

    input.addEventListener("keyup", function(event) {
        if (event.key === "Enter") {
            // event.preventDefault();
            document.getElementById("sub").click();
            // document.getElementById("button").click();
        }
    });
    // var inputc = document.getElementById("search_dropdown").children;
    // console.log("broo",inputc);
    
    var input = document.getElementById("mob_search");

input.addEventListener("keyup", function(event) {
    if (event.key === "Enter") {
        // event.preventDefault();
        document.getElementById("sub2").click();
        // document.getElementById("button").click();
    }
});

});

var cat_select = false;
var siz_select = false;
var nam_select = false;
var dynamic_info = {{_context['hidden0'] | json_encode | raw}};
var dynamic_info1 = {{_context['hidden1'] | json_encode | raw}};
var dynamic_info2 = {{_context['hidden2'] | json_encode | raw}};
var dynamic_info3 = {{_context['hidden3'] | json_encode | raw}};
var dynamic_info4 = {{_context['hidden4'] | json_encode | raw}}; 
var select_info = new Array();
var non_select_info = new Array();
var dat = {{_context['da'] | json_encode | raw}};
var dr2 = {{_context['DR'] | json_encode | raw}};
var dr = {{_context['DR'] | json_encode | raw}};
var size_tags = {{_context['size_tag'] | json_encode | raw}};
var size1 = {{_context['Quan_TAG_VAL'] | json_encode | raw}};
var sample_type = {{_context['samples22'] | json_encode | raw}};
var samples1 = {{_context['sample_each1'] | json_encode | raw}};
var all_info1 = {{_context['all_info'] | json_encode | raw}};
var all_in = {{_context['all_info'] | json_encode | raw}};
var all_info;
var size = {{_context['Quan_TAG_VAL'] | json_encode | raw}};

dynamic_info = new Array(dat.length).fill(1);
dynamic_info1 = new Array(dat.length).fill(1);
dynamic_info2 = new Array(dat.length).fill(1);
dynamic_info3 = new Array(dat.length).fill(1);
dynamic_info4 = new Array(dat.length).fill(1);
// if(document.getElementById("search").value!="")
// {
    search_info();
// }

function search_info() {

    dynamic_info = new Array(dat.length).fill(1);
    var i, val = document.getElementById("search").value;
     {# console.log("search_info "+val+" "+document.getElementById("search")); #}
    var string2 = (val.trim()).toLowerCase();
    var string2_parts = string2.split(" "); 
    for (i = 0; i < dat.length; i++) 
    {
        // for(var j = 0 ; j< all_info1[i].length ; j++)
        // {
        //     all_in[i] =all_info1[i];
        // }
        var similarity = 0;
        if (val.length > 0) 
        {
            var s1 = dat[i][0].toLowerCase();
        // var s2 = val.toLowerCase();
        var max_array = s1.split(" ");
        var similarity_loop;
        for(user_words = 0 ; user_words<string2_parts.length ; user_words++)   
        { 
            var sim = 0;
            // if(val == dat[i])
            // {
            //     simialrity = 5;
            // }
            for(similarity_loop=0;similarity_loop<max_array.length;similarity_loop++)
            {           
                var similarity_check = jaro_similarity(max_array[similarity_loop], string2_parts[user_words]);
                {# console.log(similarity_check+" max_array[similarity_loop] "+max_array[similarity_loop]+" string2_parts[user_words] "+string2_parts[user_words]+" max_array "+max_array); #}
                if(sim<similarity_check)
                {
                    sim = similarity_check;
                }
            }
            similarity += sim;
        }
        {# console.log('similarity '+similarity+" max_array[similarity_loop] "+max_array[similarity_loop]+" string2_parts[user_words] "+string2_parts[user_words]+" max_array "+max_array); #}
        // all_in[i][j] = similarity;
        // if(dat[i].toLowerCase().includes(val.toLowerCase()))
        // if (similarity > 0.80) {
        //     // console.log(dat[i]+" with "+val);
        //     // console.log("same ");
        //     dynamic_info[i] = i;
        // } else {
        //     dynamic_info[i] = -1;
        // }
        }
        else
        {
            similarity = 5;
            // console.log(all_in[i]);
            // console.log("array next");
            // all_in[i][j] = 1;
        }
        // all_in[i][j] = similarity;
        // size[i][3]=similarity;
        // all_in[i][j+1]= samples1[i];
        // dr[i] = [dr2[i],similarity];
        var c= all_in[i].length -2;// the location or index of weight in teh all_in
        var priority = all_in[i][c];
        if(priority<0)
        {
            priority=priority/100;
        }
        all_in[i][c] = priority+similarity;
        {# console.log("all_in[i][c] is: "+all_in[i][c]); #}
        size[i][3]=priority+similarity;
        // all_in[i][j+1]= samples1[i];
        dr[i] = [dr2[i],priority+similarity];
    }
    all_info = Array.from(all_in);
	all_info.sort(function(a,b) {
    return b[10]-a[10]
	});

    dr.sort(function(a,b) {
    return b[1]-a[1]
	});

	size.sort(function(a,b) {
    return b[3]-a[3]
	});
	for (i = 0; i < all_info.length; i++) 
	{
		if(all_info[i][10]>0.80)
		{
			dynamic_info[i]=i;
		}
		else
		{
			dynamic_info[i]=-1;
		}
	}
    {# console.log(all_in);
    console.log(dynamic_info); #}
}

function change_cat_tag_desktop(elem, num) {
    // console.log("desk");
    // console.log(num);
    if (elem == "Sample Collection and Preservation Kits" || elem == "Purification and Isolation Kits" || elem ==
        "Buffers and Reagents" || elem == "Clean-up and Concentration Kits") {
        const text = elem.split(' ').slice(0, 2).join(' ');
        // console.log(text);
        document.getElementById("second-p-cat").innerHTML = text + "..";
    } else {
        document.getElementById("second-p-cat").innerHTML = elem;
    }
    
    var id = "cat";
    if(num>=0)
    {
        id +=  num;
    }
    document.getElementById(id).click();

}

function change_cat_tag_mobile(elem, num) {
    // console.log("mpb");
    // console.log(num);
    var id = "mob_cat";
    if(num>=0)
    {
        id +=  num;
    }
    document.getElementById(id).click();

}

function jaro_similarity(s1, s2) {
    var m = 0;

    // Exit early if either are empty.
    if (s1.length === 0 || s2.length === 0) {
        return 0;
    }

    if (s1 === s2 || s1.includes(s2)) {
        return 1;
    }

    var range = (Math.floor(Math.max(s1.length, s2.length) / 2)) - 1,
        s1Matches = new Array(s1.length),
        s2Matches = new Array(s2.length);

    for (i = 0; i < s1.length; i++) {
        var low = (i >= range) ? i - range : 0,
            high = (i + range <= s2.length) ? (i + range) : (s2.length - 1);

        for (j = low; j <= high; j++) {
            if (s1Matches[i] !== true && s2Matches[j] !== true && s1[i] === s2[j]) {
                ++m;
                s1Matches[i] = s2Matches[j] = true;
                break;
            }
        }
    }

    // Exit early if no matches were found.
    if (m === 0) {
        return 0;
    }

    // Count the transpositions.
    var k = n_trans = 0;

    for (i = 0; i < s1.length; i++) {
        if (s1Matches[i] === true) {
            for (j = k; j < s2.length; j++) {
                if (s2Matches[j] === true) {
                    k = j + 1;
                    break;
                }
            }

            if (s1[i] !== s2[j]) {
                ++n_trans;
            }
        }
    }

    var weight = (m / s1.length + m / s2.length + (m - (n_trans / 2)) / m) / 3,
        l = 0,
        p = 0.1;

    if (weight > 0.70) {
        while (s1[l] === s2[l] && l < 4) {
            ++l;
        }

        weight = weight + l * p * (1 - weight);
    }

    return weight;
}


var siz_val = {{_context['Quan_VAL'] | json_encode | raw}};
var sku = {{_context['sku_num'] | json_encode | raw}};
search_auto(document.getElementById("search"), dat);
search_auto(document.getElementById("mob_search"), dat);
var category = {{_context['category1'] | json_encode | raw}};
var categories = all_info.map(function(value,index) { return value[6]; });
var samples = all_info.map(function(value,index) { return value[8]; });

var shown_info = new Array(new Array());
var max_rec_singlepage = 6;
var max_page_view = 6;
if(get_use_type && get_use_type==0)
{
 document.getElementById('type1').checked = true;
 document.getElementById('mob_type1').checked = true;
}
if(get_use_type && get_use_type==1)
{
 document.getElementById('type2').checked = true;
 document.getElementById('mob_type2').checked = true;
}

var category_val = {{ category_val | json_encode | raw }};
if (category_val == "") {
    category_val = -2;
}
var cat_flag = -1;

var cat_filter_loc = document.getElementById("cat-toolbar");
var mob_cat_filter_loc = document.getElementById("mob_cat-toolbar");
for (let i = 0; i < category.length; i++) {

    // var optionTag = '<option value="'+i+'">'+category[i]+'</option>';
    var optionTag = '<input type="radio"   tabindex= "-1" id="cat' + i + '" name="cat" value="' + i + '"';
    var mob_optionTag = '<input type="radio"  id="mob_cat' + i + '" name="cat" value="' + i + '"';
    if (category_val == i) {
        cat_flag = i;

    }

    optionTag += ' onclick="change_cat_tag_desktop(&apos;' + category[i] + '&apos;,&apos;' + i +
        '&apos;);change_cat_tag_mobile(&apos;' + category[i] + '&apos;,&apos;' + i + '&apos;)"><label for="cat' + i +
        '" tabindex= "0" >' + category[i] + '</label><br>'
    mob_optionTag += ' onclick="change_cat_tag_mobile(&apos;' + category[i] + '&apos;,&apos;' + i +
        '&apos;);change_cat_tag_desktop(&apos;' + category[i] + '&apos;,&apos;' + i + '&apos;)"><label for="mob_cat' +
        i + '">' + category[i] + '</label><br>'
    cat_filter_loc.insertAdjacentHTML('beforeend', optionTag);
    mob_cat_filter_loc.insertAdjacentHTML('beforeend', mob_optionTag);
    if (category_val == i) 
    {
        var id_cat = 'cat' + i;
       document.getElementById(id_cat).checked=true;
        var id_cat = 'mob_cat' + i;
       document.getElementById(id_cat).checked=true;
    }
}


// var cat_filter_loc = document.getElementById("cat-toolbar");

var optionTag =
    '<input type="radio" tabindex= "-1" id="cat" name="cat" value="-1"  onClick="(change_cat_tag_desktop(&apos;' + 'choose' + '&apos;,&apos;' + -1 +'&apos;))"><label style="background:#4c6689;color:white;border-color:#446490;" tabindex= "0" for="cat">Reset</label><br>'
cat_filter_loc.insertAdjacentHTML('beforeend', optionTag);
var mob_optionTag =
    '<input type="radio" id="mob_cat" name="cat" value="-1" onClick="(change_cat_tag_mobile(&apos;' + 'choose' + '&apos;,&apos;' + -1 +'&apos;))"><label for="cat">Reset</label><br>'
mob_cat_filter_loc.insertAdjacentHTML('beforeend', mob_optionTag);
if (cat_flag != -1) {
    var id = "cat" + cat_flag;
    var el = document.getElementById(id);
    filter_category(el);
}

var sample_type_val = {{ sample_type | json_encode | raw }};
cat_flag = -1;
for (let i = 0; i < sample_type.length; i++) {
    var samp_filter_loc = document.getElementById("sample_opt");
    var mob_samp_filter_loc = document.getElementById("mob_sample_opt");
    var optionTag = '<option value="' + sample_type[i] + '" tabindex= "0"';

    if (sample_type_val == sample_type[i]) {
        cat_flag = i;
        optionTag += ' selected ';
    }
    optionTag += '>' + sample_type[i] + '</option>';
    samp_filter_loc.insertAdjacentHTML('beforeend', optionTag);
    mob_samp_filter_loc.insertAdjacentHTML('beforeend', optionTag);
}
if (cat_flag != -1) {
    var el = document.getElementById("sample_opt");
    filter_sample_type(el);
}

var flag_submission = {{_context['flag'] | json_encode | raw}};
if(get_flag){
    onsubmitting();
}

function search_auto(inp, original_arr) //dat
{
    var up_down_current;

    inp.addEventListener("input", events);
    inp.addEventListener("click", events);
    inp.addEventListener("onchange", events);

    inp.addEventListener("keydown", function(e) {
        var drop_down_check = document.getElementById(inp.id + "_dropdown");
        if (drop_down_check) 
        {
            drop_down_check = drop_down_check.getElementsByTagName("div");
        }
        if (e.keyCode == 40) 
        {
            up_down_current++;
            focused(drop_down_check);
            if (!checkInView(drop_down_check[up_down_current],document.getElementById(inp.id + "_dropdown"))) 
            {
                drop_down_check[up_down_current].scrollIntoView({
                    block: 'end'
                });
            }
        } 
        else if (e.keyCode == 38) 
        
        {
            e.preventDefault();
            up_down_current--;
            if (!checkInView(drop_down_check[up_down_current],document.getElementById(inp.id + "_dropdown"))) 
            {
                drop_down_check[up_down_current].scrollIntoView({
                    block: 'end'
                });
            }
            focused(drop_down_check);
        } 
        
        if (up_down_current > -1) 
        {
            inp.value = (drop_down_check[up_down_current].getElementsByTagName("input"))[0].value;
        }
    });

    function events() {
        if (inp.id != "search") {
            document.getElementById("search").value = inp.value;            
        } 
        else 
        {
            document.getElementById("mob_search").value = inp.value;
        }
        dynamic_info = new Array(dat.length).fill(1);
        var  i, val = this.value;
        if(document.getElementById("search_dropdown"))
        {
            document.getElementById("search_dropdown").remove();
        }
        
        if(document.getElementById("mob_search_dropdown"))
        {
            document.getElementById("mob_search_dropdown").remove();
        }
        if (!val) {
            return false;
        }
        up_down_current = -1;
        var overlay = document.getElementById("overlay");
		overlay.style.display = "block";
        var dropdown = "<div id='"+inp.id+"_dropdown' class='dropdown_list_el'></div>";
        var id_parent = document.getElementById(inp.id).parentNode;
        // console.log(id_parent.parentNode);
        id_parent.insertAdjacentHTML('beforeend',dropdown);
        var arr = [];
        for(i = 0 ; i <original_arr.length;i++)
        {
            arr[i] =  new Array(2 ).fill("");
            arr[i][0]=original_arr[i][0];
            arr[i][1]=original_arr[i][1]
            arr[i][2]=0;
        }
        // console.log(original_arr);
        // console.log(original_arr);
        var tab = 1;
        var string2 = (val.trim()).toLowerCase();
        var string2_parts = string2.split(" "); 
        var num_of_words = string2_parts.length;     
        for (i = 0; i < arr.length; i++) 
        {
            var string1 = arr[i][0].toLowerCase();
            var max_array = string1.split(" ");
            var similarity_loop, user_words;
            arr[i][2] = 0;
            for(user_words = 0 ; user_words<string2_parts.length ; user_words++)   
            { 
                var similarity = 0;
                for(similarity_loop=0;similarity_loop<max_array.length;similarity_loop++)
                {           
                    var similarity_check = jaro_similarity(max_array[similarity_loop], string2_parts[user_words]);
                    if(similarity<similarity_check)
                    {
                        similarity = similarity_check;
                    }
                }
                arr[i][2] += similarity;
            }
        }
        arr.sort(function(a,b) {
        return b[2]-a[2]
        });
        for (i = 0; i < arr.length; i++) 
        {
            if (arr[i][2] > (0.70)) 
            {
                // dynamic_info[i] = i;
                
                var suggestion = arr[i][0]+"";

                var valstart = suggestion.toLowerCase().indexOf(val.toLowerCase());
                var len = val.length;
                // console.log(arr[i]+" "+all_info1[i][4]);
                var id_string = '"'+inp.id+'"';
                //new version - sabah
                  var dropdown_data ="<a href='https://"+domain_name + String(arr[i][1] ) +"' ><div> "+ suggestion.substring(0, valstart) +"<strong>" + suggestion.substring(valstart, (valstart + len)) + "</strong>" + suggestion
                    .substring((valstart + len), suggestion.length)+"<input tabIndex='" + 0 + "' type='hidden' value='" + suggestion + "'> </div></a>";

                var id_drop = document.getElementById((inp.id+"_dropdown"));
                // console.log(id_parent.parentNode);
                id_drop.insertAdjacentHTML('beforeend',dropdown_data);
                var el_dropdown =id_drop.getElementsByTagName("div");
                el_dropdown[(el_dropdown.length-1)].addEventListener("click", function(event) {
                    up_down_current =i;
                    focused(el_dropdown);
                    id_drop.style.display="none";
                    });
                
            } 
            // else {
            //     dynamic_info[i] = -1;
            // }
        }
    }
    function focused(drop_data) {
        if (!drop_data) return false;
        for (var i = 0; i < drop_data.length; i++) {
            drop_data[i].classList.remove("dropdown_el_active");
        }
        if (up_down_current >= drop_data.length) up_down_current = 0;
        if (up_down_current < 0) up_down_current = (drop_data.length - 1);
        drop_data[up_down_current].classList.add("dropdown_el_active");
    }

}

function drop_click(elm,inpt)
{
   
    var inp =  document.getElementById(inpt);
    inp.value = elm.getElementsByTagName("input")[0].value;
    // dynamic_info = new Array(dat.length).fill(-1);
    // var p = inp.value+"";
    // var index = sku.indexOf(p.substr(0, p.indexOf(' ')));
    // dynamic_info[index] = index;
    $("#hidden0").remove();
}

function clear() {
    var ele = document.getElementById("display_result");
    ele.replaceChildren('');
    var el = document.getElementById("paginate_buttons");
    el.replaceChildren('');
}

function onsubmitting() {

    clear();
    document.querySelector(".app-loader").style.display = "block";

    // console.log("submission done");
    var use = -1;
    if (document.querySelector("#type1").checked == true) {
        var e = document.getElementById("type1");
        //new code added by sabah
        var $radio = $(e);
        $radio.prop('checked', true);
        $radio.data('waschecked', true);
        //end of new code
        use = e.value;
        var i = document.getElementById("use_type_tag");
        i.innerHTML = "Research";
        i.parentElement.style.display = "block";
    } else if (document.querySelector("#type2").checked == true) {
        var e = document.getElementById("type2");
        //new code added by sabah
        var $radio = $(e);
        $radio.prop('checked', true);
        $radio.data('waschecked', true);
        //end of new code
        use = e.value;
        var i = document.getElementById("use_type_tag");
        i.innerHTML = "Diagnostic";
        i.parentElement.style.display = "block";
    }

    var id = "cat" + {{_context['category_val'] | json_encode | raw}};
    if (id != "cat-1" && id != "cat") {
        var e = document.getElementById(id);
        // console.log(id+" cat val "+category_val);
        // console.log(e);
        document.getElementById("cat_tag").innerHTML = category[e.value];
        document.getElementById("cat_tag").parentElement.style.display = "block";
    }
    var e = document.getElementById("sample_opt");
    if (e.value != -1) {
        document.getElementById("sample_tag").innerHTML = e.value;
        document.getElementById("sample_tag").parentElement.style.display = "block";
    }
    // var min = parseInt({{_context['min'] | json_encode | raw}};
    // var max = parseInt({{_context['max'] | json_encode | raw}};
    // var min_max_unit="";
    // var minmax_flag = 0;
    // if(min>=0 && min!="")
    // {
    //     min_max_unit = "From "+min+" ";
    //     minmax_flag = 1;
    // }
    // if(max>=0 && max!="")
    // {
    //     min_max_unit+= "to "+max+" ";
    //     minmax_flag = 2;
    // }
    // if(size_unit_val !=-1 && size_unit_val!="")
    // {
    //     min_max_unit+= size_unit_val;
    //     minmax_flag = 3;
    // }
    // if(minmax_flag!=0)
    // {
   
    //     document.getElementById("minma_tag").innerHTML = min_max_unit;
    //     document.getElementById("minma_tag").parentElement.style.display = "block";
    // }
    
     
    var count = 0;
    var cnt = 0;
    var bool = false;
    //  console.log("submit");
    setTimeout(function() {
        document.querySelector(".app-loader").style.display = "none";
        var listtag = '';
        for (let i = 0; i < all_info.length; i++) {
            if (dynamic_info[i] > -1) {
                // console.log(dynamic_info[i]);
                // console.log("no results");
                // document.querySelector(".result_heading").style.display = "inline-block";
                // listtag =listtag + '<li data-sample="'+samples[i]+'" data-category="'+categories[i]+'"><h3><a href="https://norgenbiotek.com/'+all_info[i][8]+'">'+all_info[i][1]+'</a></h3><p style="color:gray;">Category#: '+all_info[i][0]+'</p><div><p class="body_para" style="display:flex;">'+(strippedString2.substring(0,300)).trim()+"..."+'</p><img class="ce_mark" src="https://norgenbiotek.com/sites/default/files/norproduct/CE_50.png" data-src="https://norgenbiotek.com/sites/default/files/norproduct/CE_50.png"></div></li>';

            }
            if (dynamic_info[i] > -1 && dynamic_info1[i] > -1 && dynamic_info2[i] > -1 && dynamic_info3[i] > -
                1 && dynamic_info4[i] > -1) { //console.log('use ' + use);
                  if (((use != -1 && use == dr[i][0]) || use == -1)) {
             /* if (dynamic_info[i] > -1 ) 
            {
                    
            {*/
                bool = false;
                count++;
                const originalString = all_info[i][3];
                var strippedString1 = originalString.replace(/(<([^>]+)>)/gi, "");
                var strippedString2 = strippedString1.replace("&nbsp;", " ");
                //	var strippedString = strippedString2.substring(0,300)+"...";
                var disp_loc = document.getElementById("display_result");
                // console.log("fsfsf", disp_loc);
                if (cnt % 6 == 0) {
                    // console.log(cnt);
                    listtag = '<div id="hidden_' + cnt + '"';
                    if (cnt != 0) {
                        listtag = listtag + 'style=display:none;';
                    }

                    listtag = listtag + '>';
                    //disp_loc.insertAdjacentHTML('beforeend',divi);
                }
               if (dr[i] == -1) {
                    {# document.querySelector(".result_heading").style.display = "inline-block";
                    listtag = listtag + '<li data-sample="' + samples[i] + '" data-category="' + categories[
                            i] + '" data-unit="' + all_info[i][7] +
                        '"><h3><a href="https://'+domain_name + all_info[i][4] + '">' + all_info[i][
                        5] + '</a></h3><p style="color:#645d5d;">Category#: ' + all_info[i][0] +
                        '</p><div><p class="body_para" style="display:flex;">' + (strippedString2.substring(
                            0, 300)).trim() + "..." + '</p></div></li>'; #}

                    document.querySelector(".result_heading").style.display = "inline-block";
                    listtag = listtag + '<li data-sample="' + samples[i] + '" data-category="' + categories[
                            i] + '" data-unit="' + all_info[i][7] +
                        '"><h3><a href="https://'+domain_name + all_info[i][4] + '">' + all_info[i][
                        5] + '</a></h3><p style="color:#645d5d;">Category#: ' + all_info[i][0] +
                        '</p><div><p class="body_para"><img src="https://'+domain_name+'/sites/default/files/' +
                        all_info[i][2].substring(9) + '" alt="https://'+domain_name+'/sites/default/files/styles/norproduct_imagekit/public/'+all_info[i][2].substring(9)+'"  style=" margin: auto;float: left; padding: 1%;">' +
                        (strippedString2.substring(0, 300)).trim() + "..." +
                        '</p></div></li>';
                } 
                else {
                    document.querySelector(".result_heading").style.display = "inline-block";
                    listtag = listtag + '<li data-sample="' + samples[i] + '" data-category="' + categories[
                            i] + '" data-unit="' + all_info[i][7] +
                        '"><h3><a href="https://norgenbiotek.com/' + all_info[i][4] + '">' + all_info[i][
                        5] + '</a></h3><p style="color:#645d5d;">Category#: ' + all_info[i][0] +
                        '</p><div><p class="body_para"><img src="https://norgenbiotek.com/sites/default/files/styles/norproduct_imagekit/public/' +
                        all_info[i][2].substring(9) + '" alt="https://'+domain_name+'/sites/default/files/styles/norproduct_imagekit/public/'+all_info[i][2].substring(9)+'" style=" margin: auto;float: left; padding: 1%;">' +
                        (strippedString2.substring(0, 300)).trim() + "..." +
                        '</p></div></li>';
                    // listtag = listtag + '<li data-sample="' + samples[i] + '" data-category="' + categories[
                    //         i] + '" data-unit="' + all_info[i][7] +
                    //     '"><h3><a href="https://norgenbiotek.com/' + all_info[i][4] + '">' + all_info[i][
                    //     5] + '</a></h3><p style="color:#645d5d;">Category#: ' + all_info[i][0] +
                    //     '</p><div><p class="body_para" style="display:flex;">' +
                    //     (strippedString2.substring(0, 300)).trim() + "..." +
                    //     '</p><a href="https://norgenbiotek.com/' + all_info[i][4] +
                    //     '"><i class="fa fa-circle-arrow-right next-arrow" style="float:right;font-size:40px;color: #004897;padding:1%;"></i></a></div></li>';
                }
                if ((cnt + 1) % 6 == 0) {
                    // console.log("hello5");
                    listtag = listtag + '</div>';
                    disp_loc.insertAdjacentHTML('beforeend', listtag);
                    listtag = '';
                    bool = true;
                }

                cnt++;
            }

            }
        }
        if (bool == false) {
            // console.log("hello3");
            var disp_loc = document.getElementById("display_result");
            listtag = listtag + '</div>';
            disp_loc.insertAdjacentHTML('beforeend', listtag);
            listtag = '';
        }
        var number_of_pages = Math.ceil(cnt / 6);
        var pagin = document.getElementById("paginate_buttons");
        if (number_of_pages > max_page_view) {

            var id = "hidden_0";
            var button = "<button type='button' id = 'page_0' class='pager-item' style='display:none;' onclick='changepage(" +
                id + "," + number_of_pages + "," + 1 + ")'> First </button>"
            pagin.insertAdjacentHTML('beforeend', button);

            var button =
                "<button type='button' id = 'pages_0' class='pager-item' style='display:none;' onclick='change_page_view(0," +
                number_of_pages + ")'> << </button>"
            pagin.insertAdjacentHTML('beforeend', button);
        }
        for (let j = 0; j < number_of_pages; j++) {
            // console.log("hello1");
            var id = "hidden_" + (j * max_rec_singlepage);
            // console.log(id);
            var button = "<button type='button' id = 'page_" + (j + 1) + "' class='pager-item' onclick='changepage(" + id +
                "," + number_of_pages + "," + (j + 1) + ")'";

            if (j > 5 && number_of_pages > max_page_view) {
                button = button + "style='display:none;'";
            }
            button = button + ">" + (j + 1) + "</button>"
            pagin.insertAdjacentHTML('beforeend', button);
            // if(j==1 && number_of_pages>max_page_view )
            if (j == 1) {
                var first_button = document.getElementById('page_1');
                first_button.classList.add("activenow");
            }
            // cnt=0;
        }
        if (number_of_pages > max_page_view) {
            var id_last = 'page_' + max_page_view + '';
            var el = document.getElementById(id_last);
            var sp_right = "<span id = 'more_pages_right'>...</span>";
            el.insertAdjacentHTML('afterend', sp_right);


            var button = "<button type='button' id = 'pages_1' class='pager-item' onclick='change_page_view(1," +
                number_of_pages + ")'> >> </button>"
            pagin.insertAdjacentHTML('beforeend', button);

            var id = "hidden_" + ((number_of_pages - 1) * max_rec_singlepage);
            // console.log(id);
            var button = "<button type='button' id = 'page_00' class='pager-item' onclick='changepage(" + id + "," +
                number_of_pages + "," + (number_of_pages) + ")'> Last </button>"
            pagin.insertAdjacentHTML('beforeend', button);
            //cnt=0;
        }
        if (count <= 0) {
            var disp_loc = document.getElementById("display_result");
            //this is hard coded for now but not sure we save the best selling products in the database
            var listtag =
                '<h3>Sorry, we currently have no search results. Please make sure, you spelled the product correctly.</h3><br><img src="https://cdn-icons-png.flaticon.com/512/6134/6134065.png" style="width:225px;margin:10px 35%;"><br><h3> Try reducing or changing the filters or have a look at our best selling kits.</h3><br><h2 style="font-weight:600;letter-spacing:3px;color: white;padding: 2%;margin: auto;background: linear-gradient(90deg, rgb(0 72 151) 0%, rgba(255,255,255,1) 100%, rgba(255,255,255,1) 100%);">Norgen Best Selling Kits!</h2><br><div class="best-selling-grid"><li class="best-selling"><img src="https://'+domain_name+'/sites/default/files/styles/original/public/24380-alt-web.jpg?itok=sxuqevNN" data-src="https://'+domain_name+'/sites/default/files/styles/original/public/24380-alt-web.jpg?itok=sxuqevNN"><h3><a href="https://'+domain_name+'/product/total-rna-purification-96-well-kits-dx">Total RNA Purification Kit - 96 Deep Well Plate Format</a></h3><p style="color:gray;">Category#:24380</p><div><p class="body_para" style="display:flex;">This 96-well kit provides a rapid method for the high-throughput isolation and purification of total RNA in 30 minutes using vacuum manifold, plate centrifuge, or liquid handlers with vacuum capabilities. Total RNA can be isolated from a broad range of sample sources including cultured cells, tis...</p></div></li><li class="best-selling"><img src="https://'+domain_name+'/sites/default/files/styles/original/public/45660-new-web.jpg?itok=6dCaDjwm%22" data-src="https://'+domain_name+'/sites/default/files/styles/original/public/45660-new-web.jpg?itok=6dCaDjwm%22"><h3><a href="https://'+domain_name+'/product/stool-nucleic-acid-collection-and-preservation-tubes">Stool Nucleic Acid Collection and Preservation Tubes</a></h3><p style="color:gray;">Category#:45630</p><div><p class="body_para" style="display:flex;">Norgen’s Stool Nucleic Acid Collection and Preservation Tubes are designed for the rapid preservation of nucleic acids from fresh stool specimens. The Stool Nucleic Acid Collection and Preservation Tubes contain Norgen’s Stool Preservative in a liquid format. The user simply collects stool into ...</p></div></li><li class="best-selling"><img src="https://'+domain_name+'/sites/default/files/styles/original/public/68800-web_2.jpg?itok=01slW3GQ%22" data-src="https://'+domain_name+'/sites/default/files/styles/original/public/68800-web_2.jpg?itok=01slW3GQ%22"><h3><a href="https://'+domain_name+'/product/total-nucleic-acid-preservation-tubes-dx">Total Nucleic Acid Preservation Tubes Dx</a></h3><p style="color:gray;">Category#:Dx69200</p><div><p class="body_para" style="display:flex;">Norgen’s Total Nucleic Acid Preservation Tubes are designed for ambient preservation and transport of total nucleic acids (DNA and RNA) from samples collected using a swab, including nasal, buccal, saliva, fecal, skin, surfaces, etc. The Total Nucleic Acid Preservation Tubes contain Norgen’s Tot...</p></div></li><li class="best-selling"><img src="https://'+domain_name+'/sites/default/files/styles/original/public/images/product_images/17200-Total-RNA-Purification_WEB_2.jpg" data-src="https://'+domain_name+'/sites/default/files/styles/original/public/images/product_images/17200-Total-RNA-Purification_WEB_2.jpg"><h3><a href="https://'+domain_name+'/product/total-rna-purification-kit">Total RNA Purification Kit</a></h3><p style="color:gray;">Category#:17200</p><div><p class="body_para" style="display:flex;">This kit is suitable for the isolation of total RNA from a range of samples including cells, bacteria, yeast, virus and bodily fluids including plasma/serum, blood, saliva, CSF and more. Extract high quality and purity RNA with excellent RIN values and A260/A280 suitable for downstream applications...</p></div></li><li class="best-selling"><img src="https://'+domain_name+'/sites/default/files/styles/original/public/25710.png?itok=JlE1Kpel" data-src="https://'+domain_name+'/sites/default/files/styles/original/public/25710.png?itok=JlE1Kpel"><h3><a href="https://'+domain_name+'/product/rnase-free-dnase-i-kit">RNase-Free DNase I Kit</a></h3><p style="color:gray;">Category#:25710</p><div><p class="body_para" style="display:flex;">RNA purification kits isolate total RNA with minimal amounts of genomic DNA contamination. However, for some sensitive downstream applications, it may be desirable to remove all traces of residual DNA.RNase-free DNAse I Kit, with Enzyme Incubation Buffer, can be used for optiona...</p></div></li></div>';
            // listtag = listtag + '</div>'; 
            disp_loc.insertAdjacentHTML('beforeend', listtag);
        }
        if (cnt > 0) {
            document.getElementById('totalResults').innerText = cnt + " Results found | ";
            document.getElementById('totalpages').innerText = "  Page 1 out of " + number_of_pages;
        }
    }, 500);

}

 function filter_category(e) {
    if (category[e.value] == "Sample Collection and Preservation Kits" || category[e.value] ==
        "Purification and Isolation Kits" || category[e.value] == "Buffers and Reagents" || category[e.value] == "Clean-up and Concentration Kits") {
        var str = category[e.value];
        const text = str.split(' ').slice(0, 2).join(' ');
        document.getElementById("second-p-cat").innerHTML = text + "..";
    } else {
        document.getElementById("second-p-cat").innerHTML = category[e.value];
    }

    // document.getElementById("cat_tag").innerHTML = category[e.value];
    // document.getElementById("cat_tag").parentElement.style.display = "block";
    // console.log(category[e.value]);
    // console.log(e.innerText);

    var choice = e.value;
    if (choice >= 0) {
        cat_select = (choice > 0) ? -1 : 2;
        var pos = category[e.value];
        // console.log(pos+" filtyer category");
        for (let i = 0; i < categories.length; i++) {
            if (categories[i] === (pos)) {
                //console.log(categories[i]+" "+all_info[i]);
                dynamic_info1[i] = i;
            } else {
                dynamic_info1[i] = -1;
            }
        }
    } else {
        dynamic_info1 = new Array(dat.length).fill(1);
    }
} 

function change_page_view(direction, num) {
    var pos = 0;
    var left_page, right_page;
    for (let j = 1; j <= num; j++) {
        var id = "page_" + j;
        var pag_button = document.getElementById(id);
        if (pag_button.style.display != "none") {
            pos = j;
            break;
        }
    }

    if (direction == 0) {
        // console.log("left");
        if (pos > 6) {
            left_page = pos - max_page_view;
            right_page = left_page + max_page_view - 1;
        } else {
            left_page = 1;
            right_page = max_page_view;
        }
    } else {
        // console.log("right");
        if ((pos + max_page_view - 1) < num - max_page_view) {
            left_page = pos + max_page_view;
            right_page = left_page + max_page_view - 1;
        } else {
            right_page = num;
            left_page = right_page - max_page_view + 1;
        }
    }
    // console.log(left_page + " change view " + right_page);
    for (let j = 1; j <= num; j++) {
        var id = "page_" + j;
        var pag_button = document.getElementById(id);
        if (j >= left_page && j <= right_page) {
            pag_button.style = "display;";
            if (j == left_page) {
                $('#more_pages_left').remove();
                if (j > 1) {
                    var sp_left = "<span id = 'more_pages_left'>...</span>";
                    pag_button.insertAdjacentHTML('beforebegin', sp_left);
                }
            }
            if (j == right_page) {
                $('#more_pages_right').remove();
                if (j < num) {
                    var sp_right = "<span id = 'more_pages_right'>...</span>";
                    pag_button.insertAdjacentHTML('afterend', sp_right);
                }
            }
        } else {
            pag_button.style = "display:none;";
        }
    }
    if (left_page > 1 && num>=6) {
        document.getElementById('page_0').style.display = "inline-block";
        document.getElementById('pages_0').style.display = "inline-block";
    } else if( num>=6) {
        document.getElementById('page_0').style.display = "none";
        document.getElementById('pages_0').style.display = "none";
    }
    if (right_page < num && num>=6) {
        document.getElementById('page_00').style.display = "inline-block";
        document.getElementById('pages_1').style.display = "inline-block";
    } else if( num>=6) {
        document.getElementById('page_00').style.display = "none";
        document.getElementById('pages_1').style.display = "none";
    }
}

function changepage(e, num, currentpage) {

    //  console.log("changepage here");
    for (let j = 0; j < num; j++) {
        var id = "hidden_" + (j * 6);
        var elm = document.getElementById(id);
        elm.style = "display:none;";
        // console.log(elm);
    }
    e.style = "display:inline-block;";
    //   console.log("1");
    // console.log("e" , e);
    var id_cur_button = "page_" + currentpage;
    var current_button = document.getElementById(id_cur_button);
    // console.log(current_button);
    var pagin = document.getElementById("paginate_buttons");
    for (var i = 0; i < pagin.children.length; i++) {
        pagin.children[i].classList.remove("activenow");
    }
    current_button.classList.add("activenow");
    // console.log(currentpage);
    // console.log("2");
    if (currentpage > 3 && num>=6) {
        // console.log("3");
        document.getElementById('page_0').style.display = "inline-block";
        document.getElementById('pages_0').style.display = "inline-block";

    } else if( num>=6) {
        // console.log("3");
        document.getElementById('page_0').style.display = "none";
        document.getElementById('pages_0').style.display = "none";
        // console.log("2");
    }
    if (currentpage < (num - 3) && num>=6) {
        // console.log("3");	
        document.getElementById('page_00').style.display = "inline-block";
        document.getElementById('pages_1').style.display = "inline-block";
        // console.log("2");
    } else if( num>=6) {
        // console.log("3");
        document.getElementById('page_00').style.display = "none";
        document.getElementById('pages_1').style.display = "none";
        // console.log("2");
    }
    // console.log("2");
    if (num > 6) {
        // console.log("can go left or right");
        var leftmost_page = 0;
        var right_most_page = num;
        var mid = max_page_view / 2;
        if (currentpage < mid) {
            leftmost_page = 1;
            right_most_page = max_page_view;
            // console.log("the leftmost "+leftmost_page+" and right "+ right_most_page);
        } else if (currentpage >= (num - mid + 1)) {
            leftmost_page = (num - max_page_view + 1);
            right_most_page = num;
            // console.log("the rightmost "+right_most_page+" and left "+ leftmost_page);
        } else if (currentpage - (mid - 1) > 0) {
            leftmost_page = currentpage - mid + 1;
            right_most_page = leftmost_page + max_page_view - 1;
            // console.log(" going left "+leftmost_page+" and right "+ right_most_page);
        } else if (currentpage + mid < num) {
            right_most_page = currentpage + mid;
            leftmost_page = right_most_page - max_page_view + 1;
            // console.log(" going right  "+right_most_page+" and left "+ leftmost_page);
        }

        // console.log(leftmost_page + " change page " + right_most_page);
        for (let j = 1; j <= num; j++) {
            var id = "page_" + j;
            var pag_button = document.getElementById(id);
            if (j >= leftmost_page && j <= right_most_page) {
                pag_button.style = "display;";
                if (j == leftmost_page) {
                    $('#more_pages_left').remove();
                    if (j > 1) {
                        var sp_le = "<span id = 'more_pages_left'>...</span>";
                        pag_button.insertAdjacentHTML('beforebegin', sp_le);
                    }
                }
                if (j == right_most_page) {
                    $('#more_pages_right').remove();
                    if (j < num) {
                        var sp_ri = "<span id = 'more_pages_right'>...</span>";
                        pag_button.insertAdjacentHTML('afterend', sp_ri);
                    }
                }

            } else {
                pag_button.style = "display:none;";
            }
        }
    }
    document.getElementById('totalpages').innerText = "Page " + currentpage + " out of " + (num);
    window.scrollTo({ top: 0, behavior: 'smooth' })
    // window.scrollTo(0,0);
    // console.log(" how???? ");	
    // e.preventDefault();
    // e.preventDefault();
}

function filter_sample_type(e) {
    
   
    // document.getElementById("sample_tag").innerHTML = e.value;
    // document.getElementById("sample_tag").parentElement.style.display = "block";
    var choice = e.value;
    if (choice != '-1') 
    {
        document.getElementById("second-p-sample").innerHTML = e.value;
        document.getElementById("sample_opt").value = e.value;
        document.getElementById("mob_sample_opt").value = e.value;
        for (let i = 0; i < samples.length; i++) {
            //console.log(samples[i]+" "+all_info[i]);
            check = samples[i].split(",");
            // console.log(check);
            if (check.includes(choice)) {
                dynamic_info2[i] = i;

                // console.log(samples[i]+" "+all_info[i]+"\n"+dynamic_info2[i]);
            } else {
                dynamic_info2[i] = -1;
            }
        }
    } 
    else 
    {
        document.getElementById("second-p-sample").innerHTML = "choose";
        document.getElementById("sample_opt").value = e.value;
        document.getElementById("mob_sample_opt").value = e.value;
        dynamic_info2 = new Array(dat.length).fill(1);
    }
}

function filter_size(e) {
    // console.log("units..");
    // console.log(e);
    // console.log(e.value);
    if (e.value == "96-WELL PLATE") {
        var str = e.value;
        const text = str.split(' ').slice(0, 1).join(' ');
        document.getElementById("second-p-unit").innerHTML = text + "..";
    } 
    else if (e.value == -1) {
        document.getElementById("second-p-unit").innerHTML = "choose";
    } 
    else {
        document.getElementById("second-p-unit").innerHTML = e.value;
    }
    document.getElementById("size_unit").value = e.value;
    document.getElementById("mob_size_unit").value = e.value;
    // var e = document.getElementById("size_unit");
    var choice = e.value;
    if (choice != '-1') {
        // console.log(choice + " " + min.value + " "+ max.value);
        for (let i = 0; i < size.length; i++) {
            // console.log(size[i][0]);
            if (choice == size[i][0]) {
                dynamic_info3[i] = i;
            } else {
                dynamic_info3[i] = -1;
            }
        }
    } else {
        dynamic_info3 = new Array(dat.length).fill(1);
    }
}

function filter_minmax(scn) {
    if (scn == "mob") {
        var min = document.getElementById('mob_minimum').value;
        var max = document.getElementById('mob_maximum').value;
        document.getElementById('minimum').value = min;
        document.getElementById('maximum').value = max;
    } else {
        var min = document.getElementById('minimum').value;
        var max = document.getElementById('maximum').value;
        document.getElementById('mob_minimum').value = min;
        document.getElementById('mob_maximum').value = max;
    }

    // console.log("minmax"+" "+min.length+" "+max.length);
    if ((max < min && max.length!=0 && min.length!=0)) {
        dynamic_info4 = new Array(dat.length).fill(-1);
        alert("Please put valid quantities");
    } else {
        for (let i = 0; i < size.length; i++) {
            // console.log("sixe minmax");
            // console.log("ae we here??");
            // console.log(size[i][0]);
            //  console.log(size[i][1]);
            if (size[i][1] >= min && size[i][1] <= max) {
                // console.log(i+" this" );
                dynamic_info4[i] = i;
            } else {
                dynamic_info4[i] = -1;
            }
        }
    }
}

function checkInView(elem, container) 
{
    var contHeight = $(container).height();
    var contTop = $(container).scrollTop();
    var contBottom = contTop + contHeight;
    if($(elem).offset() && $(container).offset().top)
    {
        var elemTop = $(elem).offset().top - $(container).offset().top;
        var elemBottom = elemTop + $(elem).height();
        var isTotal = (elemTop >= 0 && elemBottom <= contHeight);
        return isTotal;
    }
    return true;
    
}

function reset_button() {
    var current_url = window.location.href;
    var sub_url = current_url;
    var st = current_url.indexOf("?");
    if (st > 0) {
        sub_url = current_url.substring(0, current_url.indexOf("&", st));
    }
    // console.log(sub_url);
    location.replace(sub_url);
}

function closebox(elem) {
    var current_url = window.location.href;
    var sub_url = current_url;
    var filter = "cat";
    if(elem.id == "minma_tag"){
        var fil = ["minimum","maximum","size_unit"];
        for(var i = 0; i < 3 ; i++)
        {
            var st = sub_url.indexOf(fil[i]);
            if (st > 0) 
            {
                if(i==2)
                {
                    sub_url = sub_url.substring(0, st-1);
                }
                else
                {
                    sub_url = sub_url.substring(0, st) + sub_url.substring(sub_url.indexOf("&", st) + 1);
                }
                
            }
        }
        location.replace(sub_url);
    }
    else{
        //console.log(elem.id);
        if (elem.id == "sample_tag") 
        {
            filter = "sample_opt";
        } 
        else if (elem.id == "use_tag" || elem.id == "use_type_tag") 
        {
            filter = "use_type";
        }
        //console.log(filter);
        var st = current_url.indexOf(filter);
        //console.log(st);
        if (st > 0) {
            if (current_url.indexOf("&", st) == -1) { sub_url = current_url.substring(0, st);
               if (sub_url.charAt(sub_url.length-1) == "&") { sub_url = sub_url.substring(0, sub_url.length-1); }
            } else { sub_url = current_url.substring(0, st) + current_url.substring(current_url.indexOf("&", st) + 1); }
            //console.log(current_url.substring(0, st));
            //console.log(current_url.indexOf("&", st));
            //setTimeout(10000);
            location.replace(sub_url);
        }
    }
}

function select_input(){
	var x = document.querySelector(".typing");
	x.focus();
}
</script>